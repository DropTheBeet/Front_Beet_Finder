[{"C:\\Users\\USER\\Documents\\beetfinder\\src\\index.js":"1","C:\\Users\\USER\\Documents\\beetfinder\\src\\App.js":"2","C:\\Users\\USER\\Documents\\beetfinder\\src\\utils\\setAuthToken.js":"3","C:\\Users\\USER\\Documents\\beetfinder\\src\\utils\\setUpdatePreference.js":"4","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Alerti.js":"5","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Home.js":"6","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\NotFound.js":"7","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Alerts.js":"8","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Navbar.js":"9","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Upload.js":"10","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Public.js":"11","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Favorite.js":"12","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\routing\\PrivateRoute.js":"13","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\auth\\Register.js":"14","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\Image.js":"15","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\auth\\Login.js":"16","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alerti\\alertiState.js":"17","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\beet\\beetState.js":"18","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\auth\\authContext.js":"19","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alert\\AlertState.js":"20","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\auth\\AuthState.js":"21","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alerti\\alertiContext.js":"22","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alert\\alertContext.js":"23","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\beet\\beetContext.js":"24","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Spinner.js":"25","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\Images.js":"26","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\types.js":"27","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alerti\\alertiReducer.js":"28","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\Search.js":"29","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alert\\alertReducer.js":"30","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\auth\\authReducer.js":"31","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\beet\\beetReducer.js":"32","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\ImageItem.js":"33","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\SearchItem.js":"34"},{"size":146,"mtime":1612229328357,"results":"35","hashOfConfig":"36"},{"size":2674,"mtime":1612951404649,"results":"37","hashOfConfig":"36"},{"size":262,"mtime":1612662336723,"results":"38","hashOfConfig":"36"},{"size":212,"mtime":1612945958441,"results":"39","hashOfConfig":"36"},{"size":467,"mtime":1612618149727,"results":"40","hashOfConfig":"36"},{"size":696,"mtime":1612839658641,"results":"41","hashOfConfig":"36"},{"size":253,"mtime":1612420254125,"results":"42","hashOfConfig":"36"},{"size":483,"mtime":1612654239273,"results":"43","hashOfConfig":"36"},{"size":3068,"mtime":1612948188540,"results":"44","hashOfConfig":"36"},{"size":1315,"mtime":1612771860658,"results":"45","hashOfConfig":"36"},{"size":557,"mtime":1612847916915,"results":"46","hashOfConfig":"36"},{"size":718,"mtime":1612847975611,"results":"47","hashOfConfig":"36"},{"size":582,"mtime":1612675882047,"results":"48","hashOfConfig":"36"},{"size":2629,"mtime":1612671171120,"results":"49","hashOfConfig":"36"},{"size":7250,"mtime":1612851548820,"results":"50","hashOfConfig":"36"},{"size":2157,"mtime":1612937163340,"results":"51","hashOfConfig":"36"},{"size":864,"mtime":1612618244355,"results":"52","hashOfConfig":"36"},{"size":8219,"mtime":1613364354302,"results":"53","hashOfConfig":"36"},{"size":109,"mtime":1612620175523,"results":"54","hashOfConfig":"36"},{"size":833,"mtime":1612654941827,"results":"55","hashOfConfig":"36"},{"size":2802,"mtime":1612947993853,"results":"56","hashOfConfig":"36"},{"size":113,"mtime":1612652575490,"results":"57","hashOfConfig":"36"},{"size":111,"mtime":1612652590838,"results":"58","hashOfConfig":"36"},{"size":109,"mtime":1612617419908,"results":"59","hashOfConfig":"36"},{"size":317,"mtime":1612253710529,"results":"60","hashOfConfig":"36"},{"size":792,"mtime":1612864005254,"results":"61","hashOfConfig":"36"},{"size":1176,"mtime":1612947375122,"results":"62","hashOfConfig":"36"},{"size":289,"mtime":1612617990941,"results":"63","hashOfConfig":"36"},{"size":3840,"mtime":1613365479298,"results":"64","hashOfConfig":"36"},{"size":345,"mtime":1612654907249,"results":"65","hashOfConfig":"36"},{"size":1621,"mtime":1613365527579,"results":"66","hashOfConfig":"36"},{"size":2347,"mtime":1612917696734,"results":"67","hashOfConfig":"36"},{"size":9491,"mtime":1612864829715,"results":"68","hashOfConfig":"36"},{"size":922,"mtime":1612758766579,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1pmvphe",{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\USER\\Documents\\beetfinder\\src\\index.js",[],["149","150"],"C:\\Users\\USER\\Documents\\beetfinder\\src\\App.js",["151","152","153","154"],"import React, { useEffect, useContext} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Image from './components/images/Image';\nimport Alerti from './components/layout/Alerti';\nimport Alerts from './components/layout/Alerts';\nimport Home from './components/pages/Home';\nimport Favorite from './components/pages/Favorite';\nimport Public from './components/pages/Public';\nimport Upload from './components/pages/Upload';\nimport NotFound from './components/pages/NotFound';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\nimport BeetState from './context/beet/beetState'\nimport AuthState from './context/auth/AuthState'\nimport AlertiState from './context/alerti/alertiState'\nimport AlertState from './context/alert/AlertState'\nimport setAuthToken from './utils/setAuthToken'\nimport setUpdatePreference from './utils/setUpdatePreference'\n\nimport AuthContext from './context/auth/authContext';\n\nimport './App.css';\n\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n\n  return  (\n    <AuthState>\n    <BeetState>\n    <AlertState>\n      <AlertiState>\n      <Router>\n    <div className=\"App\">\n      <Navbar />\n      <div className='container'>\n        <Alerts />\n        <Alerti />\n        <Switch>\n          <PrivateRoute exact path='/' component={Home}/>\n          <PrivateRoute exact path='/public' component={Public}/>\n          <PrivateRoute exact path='/favorite' component={Favorite}/>\n          <PrivateRoute exact path='/image/:img_no' component={Image} />\n          <PrivateRoute exact path='/upload' component={Upload} />\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/login' component={Login} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n    </Router>\n    </AlertiState>\n    </AlertState>\n    </BeetState>\n    </AuthState>\n    );\n  \n}\n// jsx와 html 다른점 \n// className\n// {/* <label for */   >  htmlFor}\n// jsx는 무조건 한개의 parent를 가지고 있어야함\n\nexport default App;\n\n\n  // async componentDidMount() {\n  //   console.log(process.env.REACT_APP_GITHUB_CLIENT_SECRET)\n  //   this.setState({loading:true});\n\n  //   const res = await axios.get(`https://api.github.com/users?client_id=$\n  //   {process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=$\n  //   {process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n  //   this.setState({users: res.data, loading:false});\n  // }\n\n  //Search Github users\n\n  // Get single Github user\n","C:\\Users\\USER\\Documents\\beetfinder\\src\\utils\\setAuthToken.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\utils\\setUpdatePreference.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Alerti.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Home.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\NotFound.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Alerts.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Navbar.js",["155"],"import React, { Fragment, useContext, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport AlertiContext from '../../context/alerti/alertiContext'\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport BeetContext from '../../context/beet/beetContext';\r\nimport axios from 'axios';\r\n\r\nconst Navbar = ({icon, title}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const beetContext = useContext(BeetContext);\r\n    const alertiContext = useContext(AlertiContext);\r\n\r\n    const { selected_files, setLoading, setLoadingFalser } = beetContext\r\n    const { isAuthenticated, logout, user, intervalFunction} = authContext;\r\n\r\n\r\n    useEffect( () =>{\r\n        if(!isAuthenticated){\r\n            clearInterval(intervalFunction)\r\n            console.log(\"sdsdsd\")\r\n            console.log(intervalFunction)\r\n        }\r\n    },[isAuthenticated])\r\n\r\n\r\n    const onLogout = () => {\r\n        logout();\r\n    }\r\n\r\n    const fileUploader = (e) => {\r\n    try {\r\n        setLoading();\r\n        const formData = new FormData();\r\n        for(const file of selected_files){\r\n            formData.append(\"upload_image\", file);\r\n        }\r\n\r\n        const config = {\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\"\r\n           }\r\n        };\r\n\r\n        axios.post(`/home/upload`, formData, config)\r\n        setLoadingFalser();\r\n        alertiContext.setAlerti(' The file upload is complete.', 'light');\r\n    } catch (error) {\r\n        setLoadingFalser()\r\n        console.log(error)\r\n        alertiContext.setAlerti('Something is wrong, contact to Webmaster ', 'light');\r\n    }\r\n    }\r\n\r\n    const authLinks = (\r\n    <Fragment>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/public\">Public</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/favorite\">Favorite</Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/upload\">Upload</Link>\r\n        </li>\r\n        \r\n        <li>Hello { user }</li>\r\n        <li>\r\n            <a onClick={onLogout} href=\"#!\">\r\n                <i className=\"fas fa-sign-out-alt\"></i> <span className=\"hide-sm\">Logout</span>\r\n            </a>\r\n        </li>\r\n    </Fragment>\r\n    );\r\n\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\">Login</Link>\r\n            </li>\r\n        </Fragment>\r\n        );\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"navbar bg-primary\">\r\n            <h1>\r\n            <i className={icon} onClick={fileUploader} />  {title}\r\n            </h1>\r\n            <ul>\r\n                {isAuthenticated ? authLinks : guestLinks}\r\n            </ul>\r\n        </div>\r\n    )              \r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Beet Finder',\r\n    icon: 'fas fa-camera cursor_test'\r\n};\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Upload.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Public.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\pages\\Favorite.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\auth\\Register.js",["156"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport AlertContext from '../../context/alert/alertContext'\r\nimport AuthContext from '../../context/auth/authContext'\r\nimport { CLEAR_ERRORS } from '../../context/types';\r\n\r\n\r\nconst Register = (props) => {\r\n    const alertContext = useContext(AlertContext);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const { setAlert } = alertContext;\r\n\r\n    const { register, error, clearErrors, isAuthenticated} = authContext;\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            props.history.push('/');\r\n        }\r\n\r\n        if (error === 'User already exists') {\r\n            setAlert(error, 'danger')\r\n            clearErrors();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [error, isAuthenticated, props.history])\r\n\r\n    const [user, setUser] = useState({\r\n        user_id: '',\r\n        user_pw: '',\r\n        user_pw2: ''\r\n    })\r\n\r\n    const { user_id, user_pw, user_pw2 } = user;\r\n\r\n    const onChange = e => setUser({ ...user, [e.target.name]:e.target.value })\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if( user_id === '' || user_pw === '') {\r\n            setAlert('Please enter all fields', 'danger');\r\n        } else if (user_pw !== user_pw2) {\r\n            setAlert('Password do not match', 'danger');            \r\n        } else {\r\n            register({\r\n                user_id,\r\n                user_pw\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div className='form-container'>\r\n            <h1>\r\n            Account <span className= \"text-primary\">Register</span>\r\n            </h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"user_id\">User ID</label>\r\n                    <input type=\"text\" name=\"user_id\" value={user_id} onChange={onChange} required/>                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"user_pw\" value={user_pw} onChange={onChange} required/>                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password2\">Confirm Password</label>\r\n                    <input type=\"password\" name=\"user_pw2\" value={user_pw2} onChange={onChange} required/>                    \r\n                </div>\r\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\Image.js",["157","158","159","160","161","162","163"],"// import React, { useEffect, Fragment, useContext} from 'react';\r\n// import Spinner from '../layout/Spinner';\r\n// import { Link } from 'react-router-dom';\r\n// import BeetContext from '../../context/beet/beetContext';\r\n\r\n// import styled from \"styled-components\";\r\n// import Overlay from \"react-overlay-component\";\r\n\r\n// const ImageDetail = styled.img`\r\n//   content: url(\"${({ bgUrl }) => bgUrl}\");\r\n//   height: 100%;\r\n//   width: 550px;\r\n//   object-fit: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.1s linear;\r\n// `;\r\n\r\n// const DetailHeader = styled.div`\r\n//   display: flex;\r\n//   align-content: center;\r\n//   margin-bottom: 5px;\r\n//   justify-content: space-between;\r\n//   padding-right: 25px;\r\n// `;\r\n\r\n\r\n// const Thum = styled.img`\r\n//   background-image: url(\"${({ bgUrl }) => bgUrl}\");\r\n\r\n//   background-size: cover;\r\n//   height: 60px;\r\n//   width: 60px;\r\n//   border-radius: 70%;\r\n\r\n//   overflow: hidden;\r\n//   object-fit: cover;\r\n// `;\r\n\r\n// const List = styled.ul`\r\n//   display: flex;\r\n// `;\r\n\r\n// const Item = styled.li`\r\n//   height: 50px;\r\n//   font-size: 23px;\r\n//   font-weight: bold;\r\n//   color: black;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   text-align: center;\r\n//   margin-left: 15px;\r\n//   margin-right: 10px;\r\n// `;\r\n// // 이미지 데이터 불러오는데 까지는 이상없음\r\n// // import Overlay from \"react-overlay-component\";\r\n// const Image = ({ match }) => {\r\n//     const beetContext = useContext(BeetContext);\r\n//     const { getImage, loading, image, like_or_unlike, click_type} = beetContext;\r\n    \r\n//   const [isOpen, setOverlay] = useState(true);\r\n//   const closeOverlay = () => setOverlay(false);\r\n\r\n//     useEffect(() => {\r\n//         console.log(click_type)\r\n//         getImage({ \"img_no\":match.params.img_no, \"type\" : click_type})\r\n//     }, [])\r\n\r\n//     const { img_info , reg_date } = image\r\n\r\n//     const onClickLike = (event) => {\r\n  \r\n//         const dataImgNo = event.target.parentNode.getAttribute(\"data-img-no\");\r\n//         //if (dataImgNo) likeApi(dataImgNo, like, setLike);\r\n//       };\r\n\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <Overlay\r\n//         style={{ maxWidth: \"800px\" }}\r\n//         configs={configs}\r\n//         isOpen={isOpen}\r\n//         closeOverlay={closeOverlay}\r\n//       >\r\n//         <div>\r\n//           <DetailHeader>\r\n//             <div style={{ display: \"flex\" }}>\r\n//               <Thum bgUrl={`${img_info.profile_thum}`} />\r\n//               <List>\r\n//                 <Item>{img_info.user_id}</Item>\r\n//                 <Item>{reg_date.slice(0, 17)}</Item>\r\n//               </List>\r\n//             </div>\r\n//             <GiBeet\r\n//               onClick={onClickLike}\r\n//               color={like ? \"#F04F53\" : \"black\"}\r\n//               size=\"50px\"\r\n//               data-img-no={match.params.img_no}\r\n//             />\r\n//           </DetailHeader>\r\n//           <ImageDetail bgUrl={`${img_info_url}`}></ImageDetail>\r\n//         </div>\r\n//       </Overlay>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Image\r\n\r\n\r\nimport React, { useEffect, Fragment, useContext} from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport BeetContext from '../../context/beet/beetContext';\r\n\r\n// 이미지 데이터 불러오는데 까지는 이상없음\r\n// import Overlay from \"react-overlay-component\";\r\nconst Image = ({ match }) => {\r\n    const beetContext = useContext(BeetContext);\r\n    const { getImage, loading, image, like_or_unlike, click_type} = beetContext;\r\n\r\n    useEffect(() => {\r\n        console.log(click_type)\r\n        getImage({ \"img_no\":match.params.img_no, \"type\" : click_type})\r\n    }, [])\r\n\r\n    const { img_info } = image\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>Hello</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n\r\n\r\n// props.params.img_\r\n\r\n\r\n\r\n\r\n// const Image = (props) => {\r\n\r\n\r\n\r\n\r\n    \r\n//     const {\r\n//         filename,\r\n//         img_no,\r\n//         img_url,\r\n//         like,\r\n//         profile_thum,\r\n//         reg_date,\r\n//         user_id,\r\n//         } = image;\r\n\r\n//     if (loading) \r\n//     {return \r\n//     <Spinner />\r\n//     }else {\r\n//      return\r\n//      <Fragment>\r\n//          <div>{console.log(props)}</div>\r\n//          <div>{console.log(image)}</div>\r\n//      </Fragment>\r\n//     }\r\n// }\r\n// export default Image;\r\n\r\n//         <Fragment>\r\n//  <Container\r\n//       onClick={() => {\r\n//         setOverlay(true);\r\n//         DetailImg(img_no);\r\n//       }}\r\n//     >\r\n//     <Button\r\n//       onClick={() => onClickDelete(img_no)}\r\n//     />\r\n//       <Overlay\r\n//         style={{ maxWidth: \"800px\" }}\r\n//         configs={configs}\r\n//         isOpen={isOpen}\r\n//         closeOverlay={closeOverlay}\r\n//       >\r\n//         <div>\r\n//           <DetailHeader>\r\n//             <div style={{ display: \"flex\" }}>\r\n//               <Thum bgUrl={`${thumbUrl}`} />\r\n//               <List>\r\n//                 <Item>{imgUser}</Item>\r\n//                 <Item>{reg_date.slice(0, 17)}</Item>\r\n//               </List>\r\n//             </div>\r\n//             <GiBeet\r\n//               onClick={onClickLike}\r\n//               color={like ? \"#F04F53\" : \"black\"}\r\n//               size=\"50px\"\r\n//               data-img-no={img_no}\r\n//             />\r\n//           </DetailHeader>\r\n//           <ImageDetail bgUrl={`${urlImg}`}></ImageDetail>\r\n//         </div>\r\n//       </Overlay>\r\n//       <ImageContainer>\r\n//         <Image bgUrl={imageUrl && `${imageUrl}`}></Image>\r\n//       </ImageContainer>\r\n//     </Container>\r\n//         </Fragment>\r\n\r\n// const Container = styled.div`\r\n//   font-size: 12px;\r\n// `;\r\n\r\n// const Image = styled.div`\r\n//   content: url(\"${({ bgUrl }) => bgUrl}\");\r\n//   height: auto;\r\n//   width: 300px;\r\n//   background-size: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.1s linear;\r\n// `;\r\n\r\n// const ImageContainer = styled.div`\r\n//   margin-bottom: 5px;\r\n//   position: relative;\r\n//   &:hover {\r\n//     ${Image} {\r\n//       opacity: 0.5;\r\n//     }\r\n//   }\r\n// `;\r\n// const ImageDetail = styled.img`\r\n//   content: url(\"${({ bgUrl }) => bgUrl}\");\r\n//   height: 100%;\r\n//   width: 550px;\r\n//   object-fit: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.1s linear;\r\n// `;\r\n\r\n// const DetailHeader = styled.div`\r\n//   display: flex;\r\n//   align-content: center;\r\n//   margin-bottom: 5px;\r\n//   justify-content: space-between;\r\n//   padding-right: 25px;\r\n// `;\r\n\r\n// const Thum = styled.img`\r\n//   background-image: url(\"${({ bgUrl }) => bgUrl}\");\r\n\r\n//   background-size: cover;\r\n//   height: 60px;\r\n//   width: 60px;\r\n//   border-radius: 70%;\r\n\r\n//   overflow: hidden;\r\n//   object-fit: cover;\r\n// `;\r\n\r\n// const List = styled.ul`\r\n//   display: flex;\r\n// `;\r\n\r\n// const Item = styled.li`\r\n//   height: 50px;\r\n//   font-size: 23px;\r\n//   font-weight: bold;\r\n//   color: black;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   text-align: center;\r\n//   margin-left: 15px;\r\n//   margin-right: 10px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n// `","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\auth\\Login.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alerti\\alertiState.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\beet\\beetState.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\auth\\authContext.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alert\\AlertState.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\auth\\AuthState.js",["164"],"import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport setAuthToken from  '../../utils/setAuthToken'\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS,\r\n    SET_INTERVAL\r\n} from '../types';\r\n\r\nconst AuthState = props => {\r\n  const initialState = {\r\n      token: localStorage.getItem('token'),\r\n      isAuthenticated: null,\r\n      loading: true,\r\n      user: null,\r\n      error: null,\r\n      intervalFunction: null,\r\n  };\r\n\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    if(localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n    // storage에 있는 token을 꺼내서 headers에 세팅\r\n    // @todo - load token into global headers\r\n\r\n    try {\r\n      const res = await axios.get('/auth');\r\n\r\n      dispatch({\r\n         type : USER_LOADED,\r\n         payload : res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({ type: AUTH_ERROR})\r\n    }\r\n  };\r\n\r\n  // Register User\r\n  const register = async formData => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type' : 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n    const res = await axios.post('/sign-up', formData, config);\r\n    \r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });  \r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: err.response.data.msg\r\n      });\r\n    }\r\n\r\n   }\r\n\r\n\r\n\r\n\r\n  // Login User\r\n  const login = async formData => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type' : 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/login', formData, config);\r\n    \r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: err.response.data.msg\r\n      });\r\n    }\r\n\r\n   }\r\n    \r\n  \r\n\r\n  // Logout\r\n  const logout = () => dispatch({ type: LOGOUT })\r\n\r\n  // Clear Errors\r\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS })\r\n  \r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n          token: state.token,\r\n          isAuthenticated: state.isAuthenticated,\r\n          loading: state.loading,\r\n          user: state.user,\r\n          error: state.error,\r\n          intervalFunction : state.intervalFunction,\r\n          register,\r\n          loadUser,\r\n          login,\r\n          logout,\r\n          clearErrors,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alerti\\alertiContext.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alert\\alertContext.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\beet\\beetContext.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\Images.js",["165","166"],"import React, { useContext, useEffect } from 'react';\r\nimport ImageItem from './ImageItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport BeetContext from '../../context/beet/beetContext';\r\n\r\n\r\nconst Images = ({ path }) => {\r\n    const beetContext = useContext(BeetContext);\r\n\r\n    const { loading, images, getFavoriteImages} = beetContext;\r\n    \r\n    if(loading) {\r\n        return <Spinner />\r\n    } else {\r\n        return (\r\n            <div style= {imageStyle}>\r\n                {images.map(image => (\r\n                    <ImageItem key={image.img_no} image={image} path={path} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst imageStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gridGap: ''\r\n}\r\n\r\nexport default Images\r\n","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\types.js",[],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alerti\\alertiReducer.js",["167"],"import {SET_ALERTI, REMOVE_ALERTI} from '../types';\r\n\r\nexport default(state, action) => {\r\n    switch(action.type) {\r\n        case SET_ALERTI:\r\n            return action.payload;\r\n        case REMOVE_ALERTI:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\Search.js",["168","169","170","171","172","173"],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\alert\\alertReducer.js",["174"],"import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload)\r\n        default:\r\n            return state;\r\n    } \r\n}","C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\auth\\authReducer.js",["175"],"C:\\Users\\USER\\Documents\\beetfinder\\src\\context\\beet\\beetReducer.js",["176","177"],"import {\r\n    SEARCH_IMAGES,\r\n    SET_LOADING,\r\n    CLEAR_IMAGES,\r\n    GET_IMAGE,\r\n    SELECT_IMAGES,\r\n    SET_SEARCH_TAGS,\r\n    FALSE_LOADING,\r\n    CLEAR_IMAGE,\r\n    SET_CLICK_TYPE_R,\r\n    SET_CLICK_TYPE_S,\r\n    CLEAR_CLICK_TYPE,\r\n    CLEAR_TAG_LIST\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_IMAGES:\r\n            return {\r\n                ...state,\r\n                images: action.payload.img_info,\r\n                tag_list: action.payload.tag_list,\r\n                loading: false\r\n            };\r\n        case GET_IMAGE:\r\n            return {\r\n                ...state,\r\n                image : action.payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_IMAGES:\r\n            return {\r\n                ...state,\r\n                images: [],\r\n                loading: false\r\n            }\r\n        case SELECT_IMAGES: \r\n            return {\r\n                ...state,\r\n                selected_files: action.payload,\r\n                loading: false\r\n            }\r\n        case GET_IMAGE: \r\n            return {\r\n                ...state,\r\n                image : action.payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_IMAGE: \r\n            return {\r\n                ...state,\r\n                image : {},\r\n                loading: false\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case FALSE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case SET_SEARCH_TAGS:\r\n            return {\r\n                ...state,\r\n                search_tags: action.payload\r\n            };\r\n        case CLEAR_TAG_LIST:\r\n            return {\r\n                ...state,\r\n                tag_list : []\r\n            }\r\n        case CLEAR_CLICK_TYPE:\r\n            return {\r\n                ...state,\r\n                click_type: {}\r\n            };\r\n        case SET_CLICK_TYPE_R:\r\n            return {\r\n                ...state,\r\n                click_type: {type : \"R\"}\r\n            };\r\n        case SET_CLICK_TYPE_S:\r\n            return {\r\n                ...state,\r\n                click_type: {type : \"S\"}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\ImageItem.js",["178","179","180","181"],"import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BeetContext from '../../context/beet/beetContext';\r\nimport styled from \"styled-components\";\r\nimport Overlay from \"react-overlay-component\";\r\nimport { GiBeet } from \"react-icons/gi\";\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  content: url(\"${({ bgUrl }) => bgUrl}\");\r\n  height: auto;\r\n  width: 300px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n  padding : 7px;\r\n  \r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  background-color : gray;\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\nconst ImageDetail = styled.img`\r\n  content: url(\"${({ bgUrl }) => bgUrl}\");\r\n  height: 100%;\r\n  width: 550px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst DetailHeader = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  margin-bottom: 5px;\r\n  justify-content: space-between;\r\n  padding-right: 25px;\r\n`;\r\n\r\nconst Thum = styled.img`\r\n  background-image: url(\"${({ bgUrl }) => bgUrl}\");\r\n\r\n  background-size: cover;\r\n  height: 60px;\r\n  width: 60px;\r\n  border-radius: 70%;\r\n\r\n  overflow: hidden;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  height: 50px;\r\n  font-size: 23px;\r\n  font-weight: bold;\r\n  color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin-left: 15px;\r\n  margin-right: 10px;\r\n`;\r\nconst ImageItem = ({image : { img_no, thum_url, reg_date }, path}) => {\r\n    const beetContext = useContext(BeetContext);\r\n    const { getImage, loading, image, like_or_unlike, click_type,likeApi} = beetContext;\r\n    const [isOpen, setOverlay] = useState(false);\r\n    const closeOverlay = () => setOverlay(false);\r\n    const [urlImg, setUrl] = useState();\r\n    const [imgUser, setUser] = useState();\r\n    const [like, setLike] = useState();\r\n    const [thumbUrl, setThumb] = useState();\r\n\r\n    const onClickLike = (event) => {\r\n  \r\n        const dataImgNo = event.target.parentNode.getAttribute(\"data-img-no\");\r\n        if (dataImgNo) \r\n        {console.log(like);\r\n            console.log(1);\r\n        likeApi(dataImgNo, like, setLike);}\r\n      };\r\n    \r\n      const DetailImg = (img_no) => {\r\n\r\n        getImage(setUrl,setUser,setLike,setThumb,img_no, click_type)\r\n      }\r\n    \r\n\r\n\r\n    const configs = {\r\n        animate: false,\r\n        // clickDismiss: false,\r\n        // escapeDismiss: false,\r\n        // focusOutline: false,\r\n      };\r\n\r\n    return (\r\n        <Container\r\n        onClick={() => {\r\n          setOverlay(true);\r\n          DetailImg(img_no);\r\n        }}\r\n      >\r\n        <Overlay\r\n          style={{ maxWidth: \"800px\" }}\r\n          configs={configs}\r\n          isOpen={isOpen}\r\n          closeOverlay={closeOverlay}\r\n        >\r\n          <div>\r\n            <DetailHeader>\r\n              <div style={{ display: \"flex\" }}>\r\n                <Thum bgUrl={`${thumbUrl}`} />\r\n                <List>\r\n                  <Item>{imgUser}</Item>\r\n                  <Item>{reg_date.slice(0, 17)}</Item>\r\n                </List>\r\n              </div>\r\n              <GiBeet\r\n                onClick={onClickLike}\r\n                color={like ? \"#F04F53\" : \"black\"}\r\n                size=\"50px\"\r\n                data-img-no={img_no}\r\n              />\r\n            </DetailHeader>\r\n            <ImageDetail bgUrl={`${urlImg}`}></ImageDetail>\r\n          </div>\r\n        </Overlay>\r\n       <div className=\"card text-center\"> \r\n            \r\n                <img src={thum_url} \r\n                alt={img_no}\r\n                className=\"round-img\"\r\n                style={{ width: '270px'}}/>\r\n            \r\n        </div>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nImageItem.propTypes = {\r\n    image:PropTypes.object.isRequired,\r\n}\r\n\r\n\r\n//inline style 사용시에는 {{}}  두개의 괄호를 사용하여야 한다\r\nexport default ImageItem\r\n\r\n// import BeetContext from '../../context/beet/beetContext';\r\n// import styled from \"styled-components\";\r\n// import Overlay from \"react-overlay-component\";\r\n// import { GiBeet } from \"react-icons/gi\";\r\n// import { useContext, useState } from 'react';\r\n// import { prettyDOM } from '@testing-library/react';\r\n// import PropTypes from 'prop-types'\r\n\r\n// const Container = styled.div`\r\n//   font-size: 12px;\r\n// `;\r\n\r\n// const Image = styled.div`\r\n//   content: url(\"${({ bgUrl }) => bgUrl}\");\r\n//   height: auto;\r\n//   width: 300px;\r\n//   background-size: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.1s linear;\r\n//   padding : 7px;\r\n  \r\n// `;\r\n\r\n// const ImageContainer = styled.div`\r\n//   background-color : gray;\r\n//   margin-bottom: 5px;\r\n//   position: relative;\r\n//   &:hover {\r\n//     ${Image} {\r\n//       opacity: 0.5;\r\n//     }\r\n//   }\r\n// `;\r\n// const ImageDetail = styled.img`\r\n//   content: url(\"${({ bgUrl }) => bgUrl}\");\r\n//   height: 100%;\r\n//   width: 550px;\r\n//   object-fit: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.1s linear;\r\n// `;\r\n\r\n// const DetailHeader = styled.div`\r\n//   display: flex;\r\n//   align-content: center;\r\n//   margin-bottom: 5px;\r\n//   justify-content: space-between;\r\n//   padding-right: 25px;\r\n// `;\r\n\r\n// const Thum = styled.img`\r\n//   background-image: url(\"${({ bgUrl }) => bgUrl}\");\r\n\r\n//   background-size: cover;\r\n//   height: 60px;\r\n//   width: 60px;\r\n//   border-radius: 70%;\r\n\r\n//   overflow: hidden;\r\n//   object-fit: cover;\r\n// `;\r\n\r\n// const List = styled.ul`\r\n//   display: flex;\r\n// `;\r\n\r\n// const Item = styled.li`\r\n//   height: 50px;\r\n//   font-size: 23px;\r\n//   font-weight: bold;\r\n//   color: black;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   text-align: center;\r\n//   margin-left: 15px;\r\n//   margin-right: 10px;\r\n// `;\r\n// const ImageItem = ({image : { img_no, thum_url, reg_date }, path}) => {\r\n//     const beetContext = useContext(BeetContext);\r\n//     const { getImage, loading, image, like_or_unlike, click_type} = beetContext;\r\n//     const [isOpen, setOverlay] = useState(false);\r\n//     const closeOverlay = () => setOverlay(false);\r\n\r\n//     const  {img_info : {urlImg, imgUser, like, thumbUrl}}  = image\r\n\r\n//     const onClickLike = (event) => {\r\n  \r\n//         const dataImgNo = event.target.parentNode.getAttribute(\"data-img-no\");\r\n//         // if (dataImgNo) likeApi(dataImgNo, like, setLike);\r\n//       };\r\n    \r\n//       const DetailImg = (img_no) => {\r\n//           const formData={ \"img_no\": img_no, \"type\" : click_type};\r\n//         getImage({ \"img_no\": img_no, \"type\" : click_type})\r\n//       }\r\n    \r\n\r\n\r\n//     const configs = {\r\n//         animate: false,\r\n//         // clickDismiss: false,\r\n//         // escapeDismiss: false,\r\n//         // focusOutline: false,\r\n//       };\r\n\r\n//     return (\r\n//         <Container\r\n//         onClick={() => {\r\n//           setOverlay(true);\r\n//           DetailImg(img_no);\r\n//         }}\r\n//       >\r\n//         <Overlay\r\n//           style={{ maxWidth: \"800px\" }}\r\n//           configs={configs}\r\n//           isOpen={isOpen}\r\n//           closeOverlay={closeOverlay}\r\n//         >\r\n//           <div>\r\n//             <DetailHeader>\r\n//               <div style={{ display: \"flex\" }}>\r\n//                 <Thum bgUrl={`${thumbUrl}`} />\r\n//                 <List>\r\n//                   <Item>{imgUser}</Item>\r\n//                   <Item>{reg_date.slice(0, 17)}</Item>\r\n//                 </List>\r\n//               </div>\r\n//               <GiBeet\r\n//                 onClick={onClickLike}\r\n//                 color={like ? \"#F04F53\" : \"black\"}\r\n//                 size=\"50px\"\r\n//                 data-img-no={img_no}\r\n//               />\r\n//             </DetailHeader>\r\n//             <ImageDetail bgUrl={`${urlImg}`}></ImageDetail>\r\n//           </div>\r\n//         </Overlay>\r\n//        <div className=\"card text-center\"> \r\n            \r\n//                 <img src={thum_url} \r\n//                 alt={img_no}\r\n//                 className=\"round-img\"\r\n//                 style={{ width: '270px'}}/>\r\n            \r\n//         </div>\r\n//         </Container>\r\n//     )\r\n\r\n// }\r\n\r\n// ImageItem.propTypes = {\r\n//     image:PropTypes.object.isRequired,\r\n// }\r\n\r\n\r\n// //inline style 사용시에는 {{}}  두개의 괄호를 사용하여야 한다\r\n// export default ImageItem\r\n\r\n\r\n\r\n// import React, { useContext } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n// import BeetContext from '../../context/beet/beetContext';\r\n\r\n// const ImageItem = ({image : { img_no, thum_url, reg_date }, path}) => {\r\n//     const beetContext = useContext(BeetContext);\r\n\r\n//     return (\r\n//         <div className=\"card text-center\"> \r\n//             <Link to={`/image/${img_no}`} className=\"btn btn-dark btn-sm my-1\">\r\n//                 <img src={thum_url} \r\n//                 alt={img_no}\r\n//                 className=\"round-img\"\r\n//                 style={{ width: '270px'}}/>\r\n//             </Link>\r\n//         </div>\r\n//     )\r\n\r\n// }\r\n\r\n// ImageItem.propTypes = {\r\n//     image:PropTypes.object.isRequired,\r\n// }\r\n\r\n\r\n// //inline style 사용시에는 {{}}  두개의 괄호를 사용하여야 한다\r\n// export default ImageItem\r\n","C:\\Users\\USER\\Documents\\beetfinder\\src\\components\\images\\SearchItem.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"190","line":1,"column":28,"nodeType":"188","messageId":"189","endLine":1,"endColumn":38},{"ruleId":"186","severity":1,"message":"191","line":21,"column":8,"nodeType":"188","messageId":"189","endLine":21,"endColumn":27},{"ruleId":"186","severity":1,"message":"192","line":23,"column":8,"nodeType":"188","messageId":"189","endLine":23,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":24,"column":7,"nodeType":"195","endLine":24,"endColumn":24,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"197","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":22},{"ruleId":"186","severity":1,"message":"198","line":114,"column":28,"nodeType":"188","messageId":"189","endLine":114,"endColumn":36},{"ruleId":"186","severity":1,"message":"199","line":115,"column":8,"nodeType":"188","messageId":"189","endLine":115,"endColumn":15},{"ruleId":"186","severity":1,"message":"200","line":116,"column":10,"nodeType":"188","messageId":"189","endLine":116,"endColumn":14},{"ruleId":"186","severity":1,"message":"201","line":123,"column":23,"nodeType":"188","messageId":"189","endLine":123,"endColumn":30},{"ruleId":"186","severity":1,"message":"202","line":123,"column":39,"nodeType":"188","messageId":"189","endLine":123,"endColumn":53},{"ruleId":"193","severity":1,"message":"203","line":128,"column":8,"nodeType":"195","endLine":128,"endColumn":10,"suggestions":"204"},{"ruleId":"186","severity":1,"message":"205","line":130,"column":13,"nodeType":"188","messageId":"189","endLine":130,"endColumn":21},{"ruleId":"186","severity":1,"message":"206","line":15,"column":5,"nodeType":"188","messageId":"189","endLine":15,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":1,"column":29,"nodeType":"188","messageId":"189","endLine":1,"endColumn":38},{"ruleId":"186","severity":1,"message":"207","line":10,"column":30,"nodeType":"188","messageId":"189","endLine":10,"endColumn":47},{"ruleId":"208","severity":1,"message":"209","line":3,"column":1,"nodeType":"210","endLine":12,"endColumn":3},{"ruleId":"186","severity":1,"message":"211","line":1,"column":16,"nodeType":"188","messageId":"189","endLine":1,"endColumn":24},{"ruleId":"212","severity":1,"message":"213","line":27,"column":25,"nodeType":"214","messageId":"215","endLine":27,"endColumn":27},{"ruleId":"193","severity":1,"message":"216","line":37,"column":8,"nodeType":"195","endLine":37,"endColumn":10,"suggestions":"217"},{"ruleId":"193","severity":1,"message":"218","line":58,"column":8,"nodeType":"195","endLine":58,"endColumn":18,"suggestions":"219"},{"ruleId":"186","severity":1,"message":"220","line":83,"column":11,"nodeType":"188","messageId":"189","endLine":83,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":116,"column":17,"nodeType":"223","messageId":"224","endLine":120,"endColumn":48},{"ruleId":"208","severity":1,"message":"209","line":3,"column":1,"nodeType":"210","endLine":12,"endColumn":2},{"ruleId":"208","severity":1,"message":"209","line":14,"column":1,"nodeType":"210","endLine":58,"endColumn":2},{"ruleId":"208","severity":1,"message":"209","line":16,"column":1,"nodeType":"210","endLine":93,"endColumn":2},{"ruleId":"225","severity":1,"message":"226","line":43,"column":9,"nodeType":"227","messageId":"215","endLine":48,"endColumn":14},{"ruleId":"186","severity":1,"message":"228","line":23,"column":7,"nodeType":"188","messageId":"189","endLine":23,"endColumn":21},{"ruleId":"186","severity":1,"message":"201","line":81,"column":23,"nodeType":"188","messageId":"189","endLine":81,"endColumn":30},{"ruleId":"186","severity":1,"message":"229","line":81,"column":32,"nodeType":"188","messageId":"189","endLine":81,"endColumn":37},{"ruleId":"186","severity":1,"message":"202","line":81,"column":39,"nodeType":"188","messageId":"189","endLine":81,"endColumn":53},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'setUpdatePreference' is defined but never used.","'AuthContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'intervalFunction'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'CLEAR_ERRORS' is defined but never used.","'Fragment' is defined but never used.","'Spinner' is defined but never used.","'Link' is defined but never used.","'loading' is assigned a value but never used.","'like_or_unlike' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'click_type', 'getImage', and 'match.params.img_no'. Either include them or remove the dependency array.",["233"],"'img_info' is assigned a value but never used.","'SET_INTERVAL' is defined but never used.","'getFavoriteImages' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'clearClickType', 'getFavoriteImages', 'getHomeImages', 'getPublicImages', 'path', and 'setClickTypeR'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'search_tags' and 'setSearchTags'. Either include them or remove the dependency array.",["235"],"'tagSet' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-duplicate-case","Duplicate case label.","SwitchCase","'ImageContainer' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [intervalFunction, isAuthenticated]",{"range":"244","text":"245"},"Update the dependencies array to be: [click_type, getImage, match.params.img_no]",{"range":"246","text":"247"},"Update the dependencies array to be: [clearClickType, getFavoriteImages, getHomeImages, getPublicImages, path, setClickTypeR]",{"range":"248","text":"249"},"Update the dependencies array to be: [search_tags, setSearchTags, tag_list]",{"range":"250","text":"251"},[895,912],"[intervalFunction, isAuthenticated]",[3695,3697],"[click_type, getImage, match.params.img_no]",[1021,1023],"[clearClickType, getFavoriteImages, getHomeImages, getPublicImages, path, setClickTypeR]",[1738,1748],"[search_tags, setSearchTags, tag_list]"]