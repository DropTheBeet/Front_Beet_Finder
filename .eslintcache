[{"C:\\Users\\USER\\Documents\\githubfinder\\src\\index.js":"1","C:\\Users\\USER\\Documents\\githubfinder\\src\\App.js":"2","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Spinner.js":"4","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\repos\\Repos.js":"5","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\repos\\Repoitem.js":"6","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\types.js":"7","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Home.js":"8","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\NotFound.js":"9","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\Search.js":"10","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\Image.js":"11","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\Images.js":"12","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\ImageItem.js":"13","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\beet\\beetState.js":"14","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\beet\\beetContext.js":"15","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\beet\\beetReducer.js":"16","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alerti\\alertiState.js":"17","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alerti\\alertiContext.js":"18","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alerti\\alertiReducer.js":"19","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Alerti.js":"20","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\auth\\AuthState.js":"21","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\auth\\authReducer.js":"22","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\auth\\authContext.js":"23","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\auth\\Register.js":"24","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\auth\\Login.js":"25","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alert\\AlertState.js":"26","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alert\\alertContext.js":"27","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alert\\alertReducer.js":"28","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Alerts.js":"29","C:\\Users\\USER\\Documents\\githubfinder\\src\\utils\\setAuthToken.js":"30","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\routing\\PrivateRoute.js":"31","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\SearchItem.js":"32","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Favorite.js":"33","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Public.js":"34","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Upload.js":"35"},{"size":146,"mtime":1612229328357,"results":"36","hashOfConfig":"37"},{"size":2515,"mtime":1612767940346,"results":"38","hashOfConfig":"37"},{"size":2754,"mtime":1612776390017,"results":"39","hashOfConfig":"37"},{"size":317,"mtime":1612253710529,"results":"40","hashOfConfig":"37"},{"size":304,"mtime":1612486415106,"results":"41","hashOfConfig":"37"},{"size":363,"mtime":1612337621202,"results":"42","hashOfConfig":"37"},{"size":880,"mtime":1612775688976,"results":"43","hashOfConfig":"37"},{"size":585,"mtime":1612751136759,"results":"44","hashOfConfig":"37"},{"size":253,"mtime":1612420254125,"results":"45","hashOfConfig":"37"},{"size":2690,"mtime":1612758243369,"results":"46","hashOfConfig":"37"},{"size":3504,"mtime":1612766709965,"results":"47","hashOfConfig":"37"},{"size":898,"mtime":1612754954459,"results":"48","hashOfConfig":"37"},{"size":700,"mtime":1612713472259,"results":"49","hashOfConfig":"37"},{"size":5675,"mtime":1612776395817,"results":"50","hashOfConfig":"37"},{"size":109,"mtime":1612617419908,"results":"51","hashOfConfig":"37"},{"size":1403,"mtime":1612776108722,"results":"52","hashOfConfig":"37"},{"size":864,"mtime":1612618244355,"results":"53","hashOfConfig":"37"},{"size":113,"mtime":1612652575490,"results":"54","hashOfConfig":"37"},{"size":289,"mtime":1612617990941,"results":"55","hashOfConfig":"37"},{"size":467,"mtime":1612618149727,"results":"56","hashOfConfig":"37"},{"size":2696,"mtime":1612766080042,"results":"57","hashOfConfig":"37"},{"size":1313,"mtime":1612675216950,"results":"58","hashOfConfig":"37"},{"size":109,"mtime":1612620175523,"results":"59","hashOfConfig":"37"},{"size":2629,"mtime":1612671171120,"results":"60","hashOfConfig":"37"},{"size":2153,"mtime":1612673116863,"results":"61","hashOfConfig":"37"},{"size":833,"mtime":1612654941827,"results":"62","hashOfConfig":"37"},{"size":111,"mtime":1612652590838,"results":"63","hashOfConfig":"37"},{"size":345,"mtime":1612654907249,"results":"64","hashOfConfig":"37"},{"size":483,"mtime":1612654239273,"results":"65","hashOfConfig":"37"},{"size":262,"mtime":1612662336723,"results":"66","hashOfConfig":"37"},{"size":582,"mtime":1612675882047,"results":"67","hashOfConfig":"37"},{"size":922,"mtime":1612758766579,"results":"68","hashOfConfig":"37"},{"size":550,"mtime":1612755038185,"results":"69","hashOfConfig":"37"},{"size":572,"mtime":1612751135282,"results":"70","hashOfConfig":"37"},{"size":1315,"mtime":1612771860658,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1hoc0np",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Documents\\githubfinder\\src\\index.js",[],["151","152"],"C:\\Users\\USER\\Documents\\githubfinder\\src\\App.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Navbar.js",["153"],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\repos\\Repos.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\repos\\Repoitem.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\types.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Home.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\NotFound.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\Search.js",["154","155","156","157"],"import React, {useState, useContext, useEffect, Fragment} from 'react';\r\nimport BeetContext from '../../context/beet/beetContext'\r\nimport AlertiContext from '../../context/alerti/alertiContext'\r\nimport SearchItem from './SearchItem'\r\n\r\n\r\n\r\n\r\n\r\nconst Search = ({path}) => {\r\n    const beetContext = useContext(BeetContext);\r\n    const alertiContext = useContext(AlertiContext);\r\n    const { tag_list, search_tags, getHomeImages, setSearchTags, getPublicImages } = beetContext;\r\n\r\n\r\n    useEffect ( () => {\r\n        if ( path ===\"Public\"){\r\n            getPublicImages({ 'tags' : []})\r\n        } else {\r\n            getHomeImages({ 'tags' : []})\r\n        }\r\n      \r\n    }, [])\r\n\r\n    useEffect ( () => {     \r\n        setSearchTags(tag_list.map((d) => {\r\n            return {\r\n                checked : false,\r\n                tag_no : d.tag_no,\r\n                tag : d.tag,\r\n                tag_han : d.tag_han,\r\n                c_major : d.c_major\r\n            }\r\n        })  )    \r\n    }, [tag_list])\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( [] === (search_tags.filter( data => data.checked === true)).map(data => data.tag_no)) {\r\n            alertiContext.setAlerti('Please enter something', 'light');\r\n        } else {\r\n            if ( path ===\"Public\"){\r\n                beetContext.getPublicImages( { 'tags' :\r\n                (search_tags.filter( data => data.checked === true)).map(data => data.tag_no)});\r\n            } else {\r\n                beetContext.getHomeImages( { 'tags' :\r\n             (search_tags.filter( data => data.checked === true)).map(data => data.tag_no)});\r\n            }\r\n            \r\n        }\r\n    } \r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"checkbox-container\">\r\n                <div className=\"checkbox_item\">\r\n                {tag_list.map(tag_info => (\r\n                    <SearchItem key={tag_info.tag_no} tag={tag_info} />\r\n                ))}\r\n                </div>\r\n            </div>\r\n            <form onSubmit={onSubmit} className=\"form\">\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Search\"\r\n                    className=\"btn btn-dark btn-block\" />\r\n            </form>\r\n            {beetContext.images.length > 0 && (\r\n            <button className=\"btn btn-light btn-block\" onClick={beetContext.clearImages}>\r\n                Clear\r\n            </button>)}\r\n        </Fragment>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Search\r\n\r\n\r\n                {/* <input type=\"text\"\r\n                    name=\"text\"\r\n                    placeholder=\"Search Images...\" \r\n                    value={text}\r\n                    onChange={onChange}  /> */}","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\Image.js",["158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { useEffect, Fragment, useContext} from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos'\r\nimport { Link } from 'react-router-dom';\r\nimport BeetContext from '../../context/beet/beetContext';\r\n\r\nconst Image = ({ match }) => {\r\n\r\n    const beetContext = useContext(BeetContext);\r\n\r\n    const { getImage, loading, image, like_or_unlike} = beetContext;\r\n\r\n    useEffect(() => {\r\n        getImage(match.params.img_no)\r\n    }, [])\r\n    \r\n    const {\r\n        filename,\r\n        img_no,\r\n        img_url,\r\n        like,\r\n        profile_thum,\r\n        reg_date,\r\n        user_id,\r\n        } = image;\r\n\r\n    if (loading) return <Spinner />;\r\n}\r\nexport default Image;\r\n\r\n//         <Fragment>\r\n//  <Container\r\n//       onClick={() => {\r\n//         setOverlay(true);\r\n//         DetailImg(img_no);\r\n//       }}\r\n//     >\r\n//     <Button\r\n//       onClick={() => onClickDelete(img_no)}\r\n//     />\r\n//       <Overlay\r\n//         style={{ maxWidth: \"800px\" }}\r\n//         configs={configs}\r\n//         isOpen={isOpen}\r\n//         closeOverlay={closeOverlay}\r\n//       >\r\n//         <div>\r\n//           <DetailHeader>\r\n//             <div style={{ display: \"flex\" }}>\r\n//               <Thum bgUrl={`${thumbUrl}`} />\r\n//               <List>\r\n//                 <Item>{imgUser}</Item>\r\n//                 <Item>{reg_date.slice(0, 17)}</Item>\r\n//               </List>\r\n//             </div>\r\n//             <GiBeet\r\n//               onClick={onClickLike}\r\n//               color={like ? \"#F04F53\" : \"black\"}\r\n//               size=\"50px\"\r\n//               data-img-no={img_no}\r\n//             />\r\n//           </DetailHeader>\r\n//           <ImageDetail bgUrl={`${urlImg}`}></ImageDetail>\r\n//         </div>\r\n//       </Overlay>\r\n//       <ImageContainer>\r\n//         <Image bgUrl={imageUrl && `${imageUrl}`}></Image>\r\n//       </ImageContainer>\r\n//     </Container>\r\n//         </Fragment>\r\n\r\n// const Container = styled.div`\r\n//   font-size: 12px;\r\n// `;\r\n\r\n// const Image = styled.div`\r\n//   content: url(\"${({ bgUrl }) => bgUrl}\");\r\n//   height: auto;\r\n//   width: 300px;\r\n//   background-size: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.1s linear;\r\n// `;\r\n\r\n// const ImageContainer = styled.div`\r\n//   margin-bottom: 5px;\r\n//   position: relative;\r\n//   &:hover {\r\n//     ${Image} {\r\n//       opacity: 0.5;\r\n//     }\r\n//   }\r\n// `;\r\n// const ImageDetail = styled.img`\r\n//   content: url(\"${({ bgUrl }) => bgUrl}\");\r\n//   height: 100%;\r\n//   width: 550px;\r\n//   object-fit: cover;\r\n//   border-radius: 4px;\r\n//   background-position: center center;\r\n//   transition: opacity 0.1s linear;\r\n// `;\r\n\r\n// const DetailHeader = styled.div`\r\n//   display: flex;\r\n//   align-content: center;\r\n//   margin-bottom: 5px;\r\n//   justify-content: space-between;\r\n//   padding-right: 25px;\r\n// `;\r\n\r\n// const Thum = styled.img`\r\n//   background-image: url(\"${({ bgUrl }) => bgUrl}\");\r\n\r\n//   background-size: cover;\r\n//   height: 60px;\r\n//   width: 60px;\r\n//   border-radius: 70%;\r\n\r\n//   overflow: hidden;\r\n//   object-fit: cover;\r\n// `;\r\n\r\n// const List = styled.ul`\r\n//   display: flex;\r\n// `;\r\n\r\n// const Item = styled.li`\r\n//   height: 50px;\r\n//   font-size: 23px;\r\n//   font-weight: bold;\r\n//   color: black;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   text-align: center;\r\n//   margin-left: 15px;\r\n//   margin-right: 10px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n// `","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\Images.js",["170"],"import React, { useContext, useEffect } from 'react';\r\nimport ImageItem from './ImageItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport BeetContext from '../../context/beet/beetContext';\r\n\r\n\r\nconst Images = ({ path }) => {\r\n    const beetContext = useContext(BeetContext);\r\n\r\n    const { loading, images, getFavoriteImages} = beetContext;\r\n\r\n\r\n    useEffect(() => {\r\n        if(path ===\"Favorite\"){\r\n            getFavoriteImages()\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(loading) {\r\n        return <Spinner />\r\n    } else {\r\n        return (\r\n            <div style= {imageStyle}>\r\n                {images.map(image => (\r\n                    <ImageItem key={image.img_no} image={image} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst imageStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gridGap: ''\r\n}\r\n\r\nexport default Images\r\n","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\ImageItem.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\beet\\beetState.js",["171","172"],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\beet\\beetContext.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\beet\\beetReducer.js",["173"],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alerti\\alertiState.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alerti\\alertiContext.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alerti\\alertiReducer.js",["174"],"import {SET_ALERTI, REMOVE_ALERTI} from '../types';\r\n\r\nexport default(state, action) => {\r\n    switch(action.type) {\r\n        case SET_ALERTI:\r\n            return action.payload;\r\n        case REMOVE_ALERTI:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Alerti.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\auth\\authReducer.js",["175"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                idsAuthenticated: true,\r\n                loading: false,\r\n                user: action.payload.user_id\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user : null,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\auth\\authContext.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\auth\\Register.js",["176"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport AlertContext from '../../context/alert/alertContext'\r\nimport AuthContext from '../../context/auth/authContext'\r\nimport { CLEAR_ERRORS } from '../../context/types';\r\n\r\n\r\nconst Register = (props) => {\r\n    const alertContext = useContext(AlertContext);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const { setAlert } = alertContext;\r\n\r\n    const { register, error, clearErrors, isAuthenticated} = authContext;\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated) {\r\n            props.history.push('/');\r\n        }\r\n\r\n        if (error === 'User already exists') {\r\n            setAlert(error, 'danger')\r\n            clearErrors();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [error, isAuthenticated, props.history])\r\n\r\n    const [user, setUser] = useState({\r\n        user_id: '',\r\n        user_pw: '',\r\n        user_pw2: ''\r\n    })\r\n\r\n    const { user_id, user_pw, user_pw2 } = user;\r\n\r\n    const onChange = e => setUser({ ...user, [e.target.name]:e.target.value })\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if( user_id === '' || user_pw === '') {\r\n            setAlert('Please enter all fields', 'danger');\r\n        } else if (user_pw !== user_pw2) {\r\n            setAlert('Password do not match', 'danger');            \r\n        } else {\r\n            register({\r\n                user_id,\r\n                user_pw\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div className='form-container'>\r\n            <h1>\r\n            Account <span className= \"text-primary\">Register</span>\r\n            </h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"user_id\">User ID</label>\r\n                    <input type=\"text\" name=\"user_id\" value={user_id} onChange={onChange} required/>                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"user_pw\" value={user_pw} onChange={onChange} required/>                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password2\">Confirm Password</label>\r\n                    <input type=\"password\" name=\"user_pw2\" value={user_pw2} onChange={onChange} required/>                    \r\n                </div>\r\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\auth\\Login.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alert\\AlertState.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alert\\alertContext.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\context\\alert\\alertReducer.js",["177"],"import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== action.payload)\r\n        default:\r\n            return state;\r\n    } \r\n}","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\layout\\Alerts.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\utils\\setAuthToken.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\images\\SearchItem.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Favorite.js",["178"],"import React, {Fragment, useContext, useEffect} from 'react'\r\nimport Search from '../images/Search';\r\nimport Images from '../images/Images';\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\n\r\nconst Favorite = (props) => {\r\n    const authContext = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        authContext.loadUser();\r\n        console.log()\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Images path = \"Favorite\" />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Favorite","C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Public.js",[],"C:\\Users\\USER\\Documents\\githubfinder\\src\\components\\pages\\Upload.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":39,"nodeType":"185","messageId":"186","endLine":1,"endColumn":47},{"ruleId":"183","severity":1,"message":"184","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"187","severity":1,"message":"188","line":23,"column":8,"nodeType":"189","endLine":23,"endColumn":10,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"191","line":35,"column":8,"nodeType":"189","endLine":35,"endColumn":18,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":84,"column":17,"nodeType":"195","messageId":"196","endLine":88,"endColumn":48},{"ruleId":"183","severity":1,"message":"197","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"198","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"183","severity":1,"message":"199","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":14},{"ruleId":"183","severity":1,"message":"200","line":11,"column":39,"nodeType":"185","messageId":"186","endLine":11,"endColumn":53},{"ruleId":"187","severity":1,"message":"201","line":15,"column":8,"nodeType":"189","endLine":15,"endColumn":10,"suggestions":"202"},{"ruleId":"183","severity":1,"message":"203","line":18,"column":9,"nodeType":"185","messageId":"186","endLine":18,"endColumn":17},{"ruleId":"183","severity":1,"message":"204","line":19,"column":9,"nodeType":"185","messageId":"186","endLine":19,"endColumn":15},{"ruleId":"183","severity":1,"message":"205","line":20,"column":9,"nodeType":"185","messageId":"186","endLine":20,"endColumn":16},{"ruleId":"183","severity":1,"message":"206","line":21,"column":9,"nodeType":"185","messageId":"186","endLine":21,"endColumn":13},{"ruleId":"183","severity":1,"message":"207","line":22,"column":9,"nodeType":"185","messageId":"186","endLine":22,"endColumn":21},{"ruleId":"183","severity":1,"message":"208","line":23,"column":9,"nodeType":"185","messageId":"186","endLine":23,"endColumn":17},{"ruleId":"183","severity":1,"message":"209","line":24,"column":9,"nodeType":"185","messageId":"186","endLine":24,"endColumn":16},{"ruleId":"187","severity":1,"message":"210","line":17,"column":8,"nodeType":"189","endLine":17,"endColumn":10,"suggestions":"211"},{"ruleId":"183","severity":1,"message":"212","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},{"ruleId":"183","severity":1,"message":"213","line":10,"column":5,"nodeType":"185","messageId":"186","endLine":10,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":11,"column":1,"nodeType":"216","endLine":58,"endColumn":2},{"ruleId":"214","severity":1,"message":"215","line":3,"column":1,"nodeType":"216","endLine":12,"endColumn":3},{"ruleId":"214","severity":1,"message":"215","line":12,"column":1,"nodeType":"216","endLine":52,"endColumn":2},{"ruleId":"183","severity":1,"message":"217","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":3,"column":1,"nodeType":"216","endLine":12,"endColumn":2},{"ruleId":"183","severity":1,"message":"218","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getHomeImages', 'getPublicImages', and 'path'. Either include them or remove the dependency array.","ArrayExpression",["221"],"React Hook useEffect has a missing dependency: 'setSearchTags'. Either include it or remove the dependency array.",["222"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Fragment' is defined but never used.","'Repos' is defined but never used.","'Link' is defined but never used.","'like_or_unlike' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getImage' and 'match.params.img_no'. Either include them or remove the dependency array.",["223"],"'filename' is assigned a value but never used.","'img_no' is assigned a value but never used.","'img_url' is assigned a value but never used.","'like' is assigned a value but never used.","'profile_thum' is assigned a value but never used.","'reg_date' is assigned a value but never used.","'user_id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFavoriteImages' and 'path'. Either include them or remove the dependency array.",["224"],"'AuthContext' is defined but never used.","'GET_IMAGE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CLEAR_ERRORS' is defined but never used.","'Search' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [getHomeImages, getPublicImages, path]",{"range":"233","text":"234"},"Update the dependencies array to be: [setSearchTags, tag_list]",{"range":"235","text":"236"},"Update the dependencies array to be: [getImage, match.params.img_no]",{"range":"237","text":"238"},"Update the dependencies array to be: [getFavoriteImages, path]",{"range":"239","text":"240"},[671,673],"[getHomeImages, getPublicImages, path]",[991,1001],"[setSearchTags, tag_list]",[472,474],"[getImage, match.params.img_no]",[457,459],"[getFavoriteImages, path]"]